.data
x_message: .asciiz "x: \n"
y_message: .asciiz "y: \n"
z_message: .asciiz "z: \n"
line: .asciiz "\n "
quotient_message: .asciiz "quotient is: \n"
reminder_message: .asciiz " \n reminder is: \n"
.text
main:
# Print x message
li $v0, 4
la $a0, x_message
syscall
# Take input from User
li $v0, 5
syscall
move $s0, $v0 #$s0 Stores user input x
# Print y message
li $v0, 4
la $a0, y_message
syscall
# Take input from User
li $v0, 5
syscall
move $s1, $v0 #$s1 Stores user input y
# Print z message
li $v0, 4
la $a0, z_message
syscall
# Take input from User
li $v0, 5
syscall
move $s2, $v0 #$s2 Stores user input z
# 5*x
mul $t0, $s0, 5
# 3*y
mul $t1, $s1, 3
# 2*z
mul $t2, $s2, 2
# 5x+3y+2z
add $t3, $t0, $t1
add $t4, $t3, $t2
# (5x+3y+2z)*4
mul $t5, $t4, 4
# (5x+3y+2z)*4/3
li $t8, 3
div $t5, $t8
#Stores reminder
mfhi $t6
#Stores quotient
mflo $t7
# Print first message
li $v0, 4
la $a0, quotient_message
syscall
#Print quotient
li $v0, 1
move $a0, $t7
syscall
# Print second message
li $v0, 4
la $a0, reminder_message
syscall
#Print reminder
li $v0, 1
move $a0, $t6
syscall
# Exit program
li $v0, 10
syscall