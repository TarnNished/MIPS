.data
    prompt: .asciiz "Enter a number: "
    prime: .asciiz "number is prime"
    not_prime: .asciiz "number is a composite"
    no_comp_prime: .asciiz "no composite or prime number"
.text
    main:
    li $v0, 4 #write number
    la $a0,prompt
    syscall
    li $v0,5 #retrieve number
    syscall
    move $s1,$v0 # moves it in $s1
    blt $s1,2,no_comp_pr #jumps to not prime or composite
    addi $t0,$zero,2 #while loop ig
    #this loop checks if number is prime or composite
loop:

    bge $t0,$s1,prime_num #if `i`($t0) is greater or equal than imputed number jumps to prime

    div $s1,$t0
    mfhi $t1 # mod reminder
    beqz $t1,composite_num #if mod == 0 jumps to composite number
    addi $t0,$t0,1
    j loop #while loop end
prime_num: #writes if num is prime
    li $v0,4

    la $a0,prime
    syscall
    j exit # jumps to exit
composite_num: #writes if num is composite
    li $v0,4
    la $a0, not_prime
    syscall
    j exit # jumps to exit
no_comp_pr: #writes if num is neither prime or composite
    li $v0,4
    la $a0, no_comp_prime
    syscall
    j exit # jumps to exit
#Bye Bye
exit:
li $v0, 10
syscall